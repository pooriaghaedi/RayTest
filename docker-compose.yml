version: '3'

services:
  db:
    image: mongo:4.4
    container_name: db
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME: $MONGO_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD: $MONGO_PASSWORD
      - MONGO_INITDB_DATABASE=my_app
    volumes:
      - dbdata2:/data/db
    networks:
      - app-network

  redis:
    image: redis
    container_name: redis
    networks:
      - app-network

  nodejs:
    build:
      context: .
      dockerfile: Dockerfile
    image: nodejs
    container_name: nodejs
    restart: unless-stopped
    env_file: .env
    depends_on:
      - db
      - redis
    environment:
      - MONGO_HOSTNAME=db
      - MONGO_DB=my_app
    ports:
      - "3030:3030"
    volumes:
      - .:/home/node/app
      - node_modules:/home/node/app/node_modules
    networks:
      - app-network
        #command: ./wait-for.sh db:27017 -- /home/node/app/node_modules/.bin/nodemon app.js
        #command: /bin/sh -c "/usr/wait-for-it.sh  db:27017 && cd  /usr/src/raychat && npm run server:development"
    command: /bin/sh -c "sleep 30 && cd  /usr/src/raychat && npm run server:development"



networks:
  app-network:
    driver: bridge

volumes:
  dbdata2:
  node_modules:

